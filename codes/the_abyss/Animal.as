package  {		import flash.display.MovieClip;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.events.Event;		public class Animal extends MovieClip {		static public const DEFAULT:String = "default";		static public const SWIM_RIGHT:String = "swim_right";		static public const SWIM_3_4_RIGHT:String = "swim_3_4_right";		static public const SWIM_LEFT:String = "swim_left";		static public const SWIM_3_4_LEFT:String = "swim_3_4_left";		static public const PAUSE:String = "pause"		public var curDir:String;		public var states:Array;		public var state:uint = 0;		public var timer:Timer;		public var timerDelay:Number = 1000; // in milliseconds				public function Animal() {			super();			curDir = ''			//target = this;			//x = (stage.stageWidth - target.width) / 2;			//y = (stage.stageHeight - target.height) / 2;			//addChild(target);			//addEventListener(Event.ENTER_FRAME, default_swim);		}				public function default_swim():void{			var dx, dy, dz:Number;			if(x < 10)				curDir = 'right';			else if(x >1190)				curDir = 'left';			if(curDir == 'right')				dx = 2;			else if(curDir == 'left')				dx = -2;			else if(curDir == '')				dx = 2;			swim(dx, 0 , 0);		}				public function swim(dx:Number, dy:Number, dz:Number):void{			if(dx > 0){				if(dz < 0)					showState('swim_3_4_right');				else					showState('swim_right');			}			else if(dx < 0){				if(dz < 0)					showState('swim_3_4_left');				else					showState('swim_left');			}			else				showState('default');			if( x + dx < 1200 &&  x + dx > 0)				x += dx;			if( y + dy < 800 &&  y + dy > 0)				y += dy;			if( width + dz < 200){				width += dz;				height += dz;			}					}				public function follow(user:User):void{			var dx = user.getSpeed()[0];			var dy = user.getSpeed()[1];			var dz = user.getSpeed()[2];						swim(dx, dy, dz);					}				public function showState(label:String, play:Boolean=false): void{			if(label == Animal.PAUSE)				return;			if(play)				gotoAndPlay(label);			else				gotoAndStop(label);		}				public function right():void{			showState(Animal.SWIM_RIGHT);			curDir = 'right';		}				public function right_3_4():void{			showState(Animal.SWIM_3_4_RIGHT);			curDir = 'right';		}				public function left():void{			showState(Animal.SWIM_LEFT);			curDir = 'left';		}				public function left_3_4():void{			showState(Animal.SWIM_3_4_LEFT);			curDir = 'left';		}	}	}